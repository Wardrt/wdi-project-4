function Interceptor(a){a.interceptors.push("authInterceptor")}function MainRouter(a,b,c){c.html5Mode(!0),a.state("home",{url:"/",templateUrl:"/html/home.html"}).state("login",{url:"/login",templateUrl:"/html/authentications/login.html"}).state("register",{url:"/register",templateUrl:"/html/authentications/register.html"}).state("users",{url:"/users",templateUrl:"/html/users/index.html"}).state("user",{url:"/users/:id",templateUrl:"/html/users/show.html",controller:"UsersController as profile"}),b.otherwise("/")}function UsersController(a,b,c,d){function e(){a.query(function(a){l.all=a.users})}function f(a){var d=a.token?a.token:null;d&&(l.currentUser=b.getUser(),l.getUsers(),c.go("home"))}function g(a){l.error="Something went wrong."}function h(){a.register(l.user,f,g)}function i(){a.login(l.user,f,g)}function j(){l.all=null,l.currentUser=null,l.user=null,b.clearUser()}function k(){return l.currentUser=b.getUser(),!!l.currentUser}var l=this;return d.id&&(l.user=a.get({id:d.id},function(a){l.user=a.user})),l.all=[],l.user=null,l.currentUser=null,l.error=null,l.getUsers=e,l.register=h,l.login=i,l.logout=j,l.checkLoggedIn=k,k()&&l.getUsers(),l}function User(a,b){return a(b+"/users/:id",{id:"@id"},{get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!1},remove:{method:"DELETE"},"delete":{method:"DELETE"},register:{url:b+"/register",method:"POST"},login:{url:b+"/login",method:"POST"}})}function AuthInterceptor(a,b){return{request:function(c){var d=b.getToken();return 0===c.url.indexOf(a)&&d&&(c.headers.Authorization="Bearer "+d),c},response:function(c){return 0===c.config.url.indexOf(a)&&c.data.token&&b.setToken(c.data.token),c}}}function CurrentUser(a){function b(){return d.user?d.user:a.decodeToken()}function c(){a.removeToken(),d.user=null}var d=this;d.getUser=b,d.clearUser=c,d.user=b()}function TokenService(a,b){function c(b){return a.localStorage.setItem("auth-token",b)}function d(){return a.localStorage.getItem("auth-token")}function e(){return a.localStorage.removeItem("auth-token")}function f(){var a=g.getToken();if(a){var c=b.decodeToken(a);return c?c._doc:null}}var g=this;g.setToken=c,g.getToken=d,g.removeToken=e,g.decodeToken=f}angular.module("twitchRoulette",["ngResource","angular-jwt","ui.router"]),angular.module("twitchRoulette").config(Interceptor),Interceptor.$inject=["$httpProvider"],angular.module("twitchRoulette").config(MainRouter),MainRouter.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],angular.module("twitchRoulette").constant("API","http://localhost:3000/api"),angular.module("twitchRoulette").controller("UsersController",UsersController),UsersController.$inject=["User","CurrentUser","$state","$stateParams"],angular.module("twitchRoulette").factory("User",User),User.$inject=["$resource","API"],angular.module("twitchRoulette").factory("authInterceptor",AuthInterceptor),AuthInterceptor.$inject=["API","TokenService"],angular.module("twitchRoulette").service("CurrentUser",CurrentUser),CurrentUser.$inject=["TokenService"],angular.module("twitchRoulette").service("TokenService",TokenService),TokenService.$inject=["$window","jwtHelper"];